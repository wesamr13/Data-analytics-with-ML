#using the filter method on the logistic regression model for the customer bank churn.

Steps:
Load the dataset into a pandas dataframe.
Split the data into features (X) and target (y).
Apply feature selection using a filter method such as Variance Threshold or Correlation Matrix.
Train the logistic regression model on the selected features.
Evaluate the performance of the model using metrics such as accuracy, precision, recall, or f1-score.

python code:

import pandas as pd
from sklearn.feature_selection import VarianceThreshold
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load the data into a pandas dataframe
df = pd.read_csv("bank_customer_churn.csv")

# Split the data into features and target
X = df.drop("Churn", axis=1)
y = df["Churn"]

# Apply Variance Threshold feature selection
selector = VarianceThreshold()
X_selected = selector.fit_transform(X)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_selected, y, test_size=0.2)

# Train the logistic regression model
clf = LogisticRegression()
clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)

# Evaluate the accuracy of the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)


#using the correlation matrix on the logistic regression model for the customer bank churn.


import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2

# Load the dataset
df = pd.read_csv('bank_customer_churn.csv')

# Split the data into features and target
X = df.iloc[:, :-1]
y = df.iloc[:, -1]

# Calculate the correlation matrix
corr_matrix = X.corr()

# Select the best features based on the correlation matrix
best_features = SelectKBest(score_func=chi2, k=5)
fit = best_features.fit(X, y)

# Get the indices of the best features
best_features_indices = fit.get_support(indices=True)

# Get the names of the best features
best_features_names = X.columns[best_features_indices]

# Use the best features to train the logistic regression model
X_new = X[best_features_names]
model = LogisticRegression()
model.fit(X_new, y)

In this code, we first calculate the correlation matrix between the features. 
Then we use the SelectKBest function from the sklearn.feature_selection module to select the k best features based on the correlation matrix using the chi2 score function.
Finally, we train the logistic regression model using only the best features.
